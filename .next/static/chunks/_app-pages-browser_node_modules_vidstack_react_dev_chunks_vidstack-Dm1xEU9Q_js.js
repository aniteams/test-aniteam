"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_vidstack_react_dev_chunks_vidstack-Dm1xEU9Q_js"],{

/***/ "(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-Dm1xEU9Q.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vidstack/react/dev/chunks/vidstack-Dm1xEU9Q.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   findYouTubePoster: () => (/* binding */ findYouTubePoster),\n/* harmony export */   resolveYouTubeVideoId: () => (/* binding */ resolveYouTubeVideoId)\n/* harmony export */ });\n/* __next_internal_client_entry_do_not_use__ findYouTubePoster,resolveYouTubeVideoId auto */ const videoIdRE = /(?:youtu\\.be|youtube|youtube\\.com|youtube-nocookie\\.com)(?:\\/shorts)?\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=|)((?:\\w|-){11})/;\nconst posterCache = /* @__PURE__ */ new Map();\nconst pendingFetch = /* @__PURE__ */ new Map();\nfunction resolveYouTubeVideoId(src) {\n    var _src_match;\n    return (_src_match = src.match(videoIdRE)) === null || _src_match === void 0 ? void 0 : _src_match[1];\n}\nasync function findYouTubePoster(videoId, abort) {\n    if (posterCache.has(videoId)) return posterCache.get(videoId);\n    if (pendingFetch.has(videoId)) return pendingFetch.get(videoId);\n    const pending = new Promise(async (resolve)=>{\n        const sizes = [\n            \"maxresdefault\",\n            \"sddefault\",\n            \"hqdefault\"\n        ];\n        for (const size of sizes){\n            for (const webp of [\n                true,\n                false\n            ]){\n                const url = resolveYouTubePosterURL(videoId, size, webp), response = await fetch(url, {\n                    mode: \"no-cors\",\n                    signal: abort.signal\n                });\n                if (response.status < 400) {\n                    posterCache.set(videoId, url);\n                    resolve(url);\n                    return;\n                }\n            }\n        }\n    }).catch(()=>\"\").finally(()=>pendingFetch.delete(videoId));\n    pendingFetch.set(videoId, pending);\n    return pending;\n}\nfunction resolveYouTubePosterURL(videoId, size, webp) {\n    const type = webp ? \"webp\" : \"jpg\";\n    return \"https://i.ytimg.com/\".concat(webp ? \"vi_webp\" : \"vi\", \"/\").concat(videoId, \"/\").concat(size, \".\").concat(type);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Admlkc3RhY2svcmVhY3QvZGV2L2NodW5rcy92aWRzdGFjay1EbTF4RVU5US5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs2RkFFQSxNQUFNQSxZQUFZO0FBQ2xCLE1BQU1DLGNBQWMsYUFBYSxHQUFHLElBQUlDO0FBQ3hDLE1BQU1DLGVBQWUsYUFBYSxHQUFHLElBQUlEO0FBQ3pDLFNBQVNFLHNCQUFzQkMsR0FBRztRQUN6QkE7SUFBUCxRQUFPQSxhQUFBQSxJQUFJQyxLQUFLLENBQUNOLHdCQUFWSyxpQ0FBQUEsVUFBc0IsQ0FBQyxFQUFFO0FBQ2xDO0FBQ0EsZUFBZUUsa0JBQWtCQyxPQUFPLEVBQUVDLEtBQUs7SUFDN0MsSUFBSVIsWUFBWVMsR0FBRyxDQUFDRixVQUFVLE9BQU9QLFlBQVlVLEdBQUcsQ0FBQ0g7SUFDckQsSUFBSUwsYUFBYU8sR0FBRyxDQUFDRixVQUFVLE9BQU9MLGFBQWFRLEdBQUcsQ0FBQ0g7SUFDdkQsTUFBTUksVUFBVSxJQUFJQyxRQUFRLE9BQU9DO1FBQ2pDLE1BQU1DLFFBQVE7WUFBQztZQUFpQjtZQUFhO1NBQVk7UUFDekQsS0FBSyxNQUFNQyxRQUFRRCxNQUFPO1lBQ3hCLEtBQUssTUFBTUUsUUFBUTtnQkFBQztnQkFBTTthQUFNLENBQUU7Z0JBQ2hDLE1BQU1DLE1BQU1DLHdCQUF3QlgsU0FBU1EsTUFBTUMsT0FBT0csV0FBVyxNQUFNQyxNQUFNSCxLQUFLO29CQUNwRkksTUFBTTtvQkFDTkMsUUFBUWQsTUFBTWMsTUFBTTtnQkFDdEI7Z0JBQ0EsSUFBSUgsU0FBU0ksTUFBTSxHQUFHLEtBQUs7b0JBQ3pCdkIsWUFBWXdCLEdBQUcsQ0FBQ2pCLFNBQVNVO29CQUN6QkosUUFBUUk7b0JBQ1I7Z0JBQ0Y7WUFDRjtRQUNGO0lBQ0YsR0FBR1EsS0FBSyxDQUFDLElBQU0sSUFBSUMsT0FBTyxDQUFDLElBQU14QixhQUFheUIsTUFBTSxDQUFDcEI7SUFDckRMLGFBQWFzQixHQUFHLENBQUNqQixTQUFTSTtJQUMxQixPQUFPQTtBQUNUO0FBQ0EsU0FBU08sd0JBQXdCWCxPQUFPLEVBQUVRLElBQUksRUFBRUMsSUFBSTtJQUNsRCxNQUFNWSxPQUFPWixPQUFPLFNBQVM7SUFDN0IsT0FBTyx1QkFBa0RULE9BQTNCUyxPQUFPLFlBQVksTUFBSyxLQUFjRCxPQUFYUixTQUFRLEtBQVdxQixPQUFSYixNQUFLLEtBQVEsT0FBTGE7QUFDOUU7QUFFb0QiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbG9yZHJcXERvd25sb2Fkc1xcQW5pVGVhbXMtbWFpblxcbm9kZV9tb2R1bGVzXFxAdmlkc3RhY2tcXHJlYWN0XFxkZXZcXGNodW5rc1xcdmlkc3RhY2stRG0xeEVVOVEuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCJcblxuY29uc3QgdmlkZW9JZFJFID0gLyg/OnlvdXR1XFwuYmV8eW91dHViZXx5b3V0dWJlXFwuY29tfHlvdXR1YmUtbm9jb29raWVcXC5jb20pKD86XFwvc2hvcnRzKT9cXC8oPzplbWJlZFxcL3x2XFwvfHdhdGNoXFw/dj18d2F0Y2hcXD8uKyZ2PXwpKCg/Olxcd3wtKXsxMX0pLztcbmNvbnN0IHBvc3RlckNhY2hlID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbmNvbnN0IHBlbmRpbmdGZXRjaCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG5mdW5jdGlvbiByZXNvbHZlWW91VHViZVZpZGVvSWQoc3JjKSB7XG4gIHJldHVybiBzcmMubWF0Y2godmlkZW9JZFJFKT8uWzFdO1xufVxuYXN5bmMgZnVuY3Rpb24gZmluZFlvdVR1YmVQb3N0ZXIodmlkZW9JZCwgYWJvcnQpIHtcbiAgaWYgKHBvc3RlckNhY2hlLmhhcyh2aWRlb0lkKSkgcmV0dXJuIHBvc3RlckNhY2hlLmdldCh2aWRlb0lkKTtcbiAgaWYgKHBlbmRpbmdGZXRjaC5oYXModmlkZW9JZCkpIHJldHVybiBwZW5kaW5nRmV0Y2guZ2V0KHZpZGVvSWQpO1xuICBjb25zdCBwZW5kaW5nID0gbmV3IFByb21pc2UoYXN5bmMgKHJlc29sdmUpID0+IHtcbiAgICBjb25zdCBzaXplcyA9IFtcIm1heHJlc2RlZmF1bHRcIiwgXCJzZGRlZmF1bHRcIiwgXCJocWRlZmF1bHRcIl07XG4gICAgZm9yIChjb25zdCBzaXplIG9mIHNpemVzKSB7XG4gICAgICBmb3IgKGNvbnN0IHdlYnAgb2YgW3RydWUsIGZhbHNlXSkge1xuICAgICAgICBjb25zdCB1cmwgPSByZXNvbHZlWW91VHViZVBvc3RlclVSTCh2aWRlb0lkLCBzaXplLCB3ZWJwKSwgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIHtcbiAgICAgICAgICBtb2RlOiBcIm5vLWNvcnNcIixcbiAgICAgICAgICBzaWduYWw6IGFib3J0LnNpZ25hbFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA8IDQwMCkge1xuICAgICAgICAgIHBvc3RlckNhY2hlLnNldCh2aWRlb0lkLCB1cmwpO1xuICAgICAgICAgIHJlc29sdmUodXJsKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0pLmNhdGNoKCgpID0+IFwiXCIpLmZpbmFsbHkoKCkgPT4gcGVuZGluZ0ZldGNoLmRlbGV0ZSh2aWRlb0lkKSk7XG4gIHBlbmRpbmdGZXRjaC5zZXQodmlkZW9JZCwgcGVuZGluZyk7XG4gIHJldHVybiBwZW5kaW5nO1xufVxuZnVuY3Rpb24gcmVzb2x2ZVlvdVR1YmVQb3N0ZXJVUkwodmlkZW9JZCwgc2l6ZSwgd2VicCkge1xuICBjb25zdCB0eXBlID0gd2VicCA/IFwid2VicFwiIDogXCJqcGdcIjtcbiAgcmV0dXJuIGBodHRwczovL2kueXRpbWcuY29tLyR7d2VicCA/IFwidmlfd2VicFwiIDogXCJ2aVwifS8ke3ZpZGVvSWR9LyR7c2l6ZX0uJHt0eXBlfWA7XG59XG5cbmV4cG9ydCB7IGZpbmRZb3VUdWJlUG9zdGVyLCByZXNvbHZlWW91VHViZVZpZGVvSWQgfTtcbiJdLCJuYW1lcyI6WyJ2aWRlb0lkUkUiLCJwb3N0ZXJDYWNoZSIsIk1hcCIsInBlbmRpbmdGZXRjaCIsInJlc29sdmVZb3VUdWJlVmlkZW9JZCIsInNyYyIsIm1hdGNoIiwiZmluZFlvdVR1YmVQb3N0ZXIiLCJ2aWRlb0lkIiwiYWJvcnQiLCJoYXMiLCJnZXQiLCJwZW5kaW5nIiwiUHJvbWlzZSIsInJlc29sdmUiLCJzaXplcyIsInNpemUiLCJ3ZWJwIiwidXJsIiwicmVzb2x2ZVlvdVR1YmVQb3N0ZXJVUkwiLCJyZXNwb25zZSIsImZldGNoIiwibW9kZSIsInNpZ25hbCIsInN0YXR1cyIsInNldCIsImNhdGNoIiwiZmluYWxseSIsImRlbGV0ZSIsInR5cGUiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@vidstack/react/dev/chunks/vidstack-Dm1xEU9Q.js\n"));

/***/ })

}]);